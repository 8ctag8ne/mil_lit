@model MIL_LIT.Book
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> _signInManager
@inject UserManager<User> _userManager

@{
    IEnumerable<Tag> Tags = ViewData["Tags"] as IEnumerable<Tag>;
    IEnumerable<MIL_LIT.Comment> Comments = ViewData["Comments"] as IEnumerable<MIL_LIT.Comment>;
    string DownloadLink = ViewData["DownloadLink"] as string;
    bool IsLiked = (bool)ViewData["IsLiked"];
}
<div class="wr">
    <h4>@Model.Name</h4>
    <hr class="hr.book"/>
    <div class="row">
        <div class = "col-sm">
            @if(Model.CoverLink != null)
                {
                    <a asp-action="Details" asp-route-id="@Model.BookId">
                    <img height="450" width="300" class="fit-image"
                    src = @Model.CoverLink
                    alt = "Нема хліба, нема сала, Калі - Юга все забрала"
                    />
                    </a>
                } else
                {
                    <a asp-action="Details" asp-route-id="@Model.BookId">
                    <img height="450" width="300" class="fit-image"
                    src = "~/resources/NoImage.png"
                    alt = "Нема хліба, нема сала, Калі - Юга все забрала"
                    />
                    </a>
                }
        </div>
        <div class="col-sm-9">
            <table class="table wr" aria-describedby="Інформація про книгу">
                <tbody>
                    <tr>
                        <th scope="row">Назва:</th>
                        <td>@Model.Name</td>
                    </tr>
                    <tr>
                        <th scope="row">Автор:</th>
                        <td>@Model.Author</td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(model => model.CreatedAt):</th>
                        <td>@Model.CreatedAt</td>
                    </tr>
                    <tr>
                        <th scope="row">Створено користувачем:</th>
                        <td>
                            @if(Model.CreatedByNavigation == null)
                            {
                                <text>Користувач видалений</text>
                            } else
                            {
                                <a asp-action="Details" asp-route-id="@Model.CreatedByNavigation.Id" asp-controller="User" style="text-decoration:none">
                                    @Model.CreatedByNavigation.Login
                                </a>
                            }
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">@Html.DisplayNameFor(model => model.GeneralInfo):</th>
                        <td>@Model.GeneralInfo</td>
                    </tr>
                    @if(Tags.Count() != 0)
                    {
                        <tr>
                            <th scope="row">
                                Категорії:
                            </th>
                            <td>
                                @foreach(var tag in Tags)
                                {
                                    <a asp-action="Details"  asp-controller="Tag" asp-route-id="@tag.TagId" style="text-decoration:none">
                                        <button class="btn btn-outline-light">
                                            @tag.Name
                                        </button>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3 d-flex my-2">
            <a href = "@Model.SourceLink" class="w-100">
                <button class="btn btn-outline-success w-100">
                    Читати
                </button>
            </a>
        </div>
    </div>
        <div class="row">
            <div class="col-lg-3 d-flex">
                @if(IsLiked)
                {
                    <button class="btn btn-outline-danger w-100 mb-2 bi-heart-fill" data-toggle="button" aria-pressed="false" 
                    onclick="myFunction(this, @Model.BookId, @_userManager.GetUserId(User))" data-likes="@Model.Likes">
                    @Model.Likes
                    </button>
                } else
                {
                    <button class="btn btn-outline-danger w-100 mb-2 bi-heart" data-toggle="button" aria-pressed="false" 
                    onclick="myFunction(this, @Model.BookId, @_userManager.GetUserId(User))" 
                    data-likes="@Model.Likes" disabled="@(!User.Identity.IsAuthenticated)">
                    @Model.Likes
                    </button>
                }
            </div>
        </div>
    @if(User.Identity.IsAuthenticated)
    {
        <div class="row">
            <div class="col-lg-3 d-flex">
                <a href=@DownloadLink class="w-100">
                    <button class="btn btn-outline-info w-100 mb-2 bi-download" data-toggle="button" aria-pressed="false" 
                        onclick="SaveFunction(this, @Model.BookId, @_userManager.GetUserId(User))" 
                        data-saves="@Model.Saves">
                        @Model.Saves
                    </button>
                </a>
            </div>
        </div>
    }
</div>
<div>
    @if(User.IsInRole("admin") || User.IsInRole("moderator"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.BookId" class="btn btn-outline-warning me-3 my-3">Редагувати</a>
    }
    <a asp-action="Index" class="btn btn-outline-secondary my-3">Повернутися до списку книг</a>
</div>
@if(User.Identity.IsAuthenticated)
{
    <form method="post" asp-controller="Comment" asp-action="Create">
        <div class="form-group">
            <label class="control-label wr">Ваш коментар:</label>
            <textarea name="Text" id="output" class="form-control commentinput"></textarea>
        </div>
        <input name="UserId" value="@_userManager.GetUserId(User)" readonly hidden/>
        <input asp-for="BookId" value="@Model.BookId" readonly hidden/>
        <div class="form-group my-3">
            <input type="submit" value="Додати коментар" class="btn btn-outline-info" />
        </div>
    </form>
}
else
{
    <p>
        <h5 class="wr">
            Щоби додати коментар необхідно зареєструватися.
        </h5>
    </p>
}

@if(Comments != null && Comments.Count() > 0)
{
    <h5 class="wr"><p>Коментарі:</p></h5>
    <table class="table wr" aria-describedby="Список коментарів">
            <tbody>
                @foreach(var comment in Comments)
                {
                    <tr>
                        @if(comment.User != null)
                        {
                            <td>
                                @comment.User.Login
                        </td>
                        } else
                        {
                            <td>
                                Користувач видалений
                            </td>
                        }
                        <td>
                            @comment.Text
                        </td>
                        <td>
                            @if(User.IsInRole("admin") || User.IsInRole("moderator") || _userManager.GetUserId(User) == Convert.ToString(comment.UserId))
                            {
                                <a asp-action="Edit" asp-controller="Comment" asp-route-id="@comment.CommentId" style="text-decoration:none">
                                    <button class="btn btn-outline-warning mb-2 me-2">
                                        <i class="bi bi-pencil-square"></i>
                                    </button>
                                </a>
                                @* <a asp-action="Details" asp-controller="Comment" asp-route-id="@comment.CommentId" style="text-decoration:none">
                                    <button class="btn btn-outline-success mb-2 me-2">
                                        <i class="bi bi-arrows-fullscreen"></i>
                                    </button>
                                </a> *@
                            
                                <a asp-action="Delete" asp-controller="Comment" asp-route-id="@comment.CommentId" style="text-decoration:none">
                                    <button class="btn btn-outline-danger mb-2 me-2">
                                        <i class="bi bi-trash-fill"></i>
                                    </button>
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
    </table>
}

<script>
    function myFunction(x, bookId, userId) 
    {
        console.log("myFunction called with bookId:", bookId, "and userId:", userId);
        $.ajax({
            type: "POST",
            url: "/Book/LikeAction",
            data: { BookId: bookId, UserId: userId },
            success: function (response) {
                // Update UI if necessary
                if (response.success) 
                {
                    var likesCount = parseInt(x.getAttribute("data-likes"));
                    if(x.classList.contains("bi-heart"))
                    {
                        x.classList.remove("bi-heart");
                        x.classList.add("bi-heart-fill");
                        likesCount++;
                    } else
                    {
                        x.classList.remove("bi-heart-fill");
                        x.classList.add("bi-heart");
                        likesCount--;
                    }
                    x.setAttribute("data-likes", likesCount);
                    x.textContent = " "+likesCount;
                } 
                else 
                {
                    // Like action failed
                    // Handle error if needed
                }
            },
            error: function (xhr, status, error) 
            {
                // Handle error if AJAX request fails
                console.error("AJAX error:", error);
                // Optionally, display an error message to the user
                alert("An error occurred while processing your request. Please try again later.");
            }
        });
    }

    function SaveFunction(x, bookId, userId) 
    {
        console.log("SaveFunction called with bookId:", bookId, "and userId:", userId);
        $.ajax({
            type: "POST",
            url: "/Book/SaveAction",
            data: { BookId: bookId, UserId: userId },
            success: function (response) {
                // Update UI if necessary
                if (response.success) 
                {
                    var SavesCount = parseInt(x.getAttribute("data-saves"));
                    SavesCount++;
                    x.setAttribute("data-saves", SavesCount);
                    x.textContent = " "+SavesCount;
                } 
                else
                {
                    // Like action failed
                    // Handle error if needed
                }
            },
            error: function (xhr, status, error) 
            {
                // Handle error if AJAX request fails
                console.error("AJAX error:", error);
                // Optionally, display an error message to the user
                alert("An error occurred while processing your request. Please try again later.");
            }
        });
    }
</script>
